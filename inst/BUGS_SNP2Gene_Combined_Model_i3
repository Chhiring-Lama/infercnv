model {
    ## Single cell
    for( k in 1:K ) {
        ## Gene level (snp)
        for ( j in 1:J ) {
            r[j,k] ~ dbin(p[j,k], n.sc[j,k])
            
            ## if has deletion, then bias has no effect since only one allele to expression
            ## the one allele expressed should be consistent with bulk
            ## if no deletion, then there could be mono-allelic expression
            ## which affects deviation away from expected 0.5 probability
            ## b is imputed from our bias model
            p[j,k] <- fma[j] * 
                      (equals(epsilon[k], 1 )) + 
                      ( h[j,k]*(1-b[j,k]) + (pseudo*d[j,k] + (1-pseudo)*(1-d[j,k]))*b[j,k] ) * 
                      (equals(epsilon[k], 2 )) +
                      ( h[j,k]*(1-b[j,k]) + (pseudo*d[j,k] + (1-pseudo)*(1-d[j,k]))*b[j,k] ) * 
                      (equals(epsilon[k], 3 ))
        
            h[j,k] ~ dnorm(0.5,0.1)T(pseudo, 1-pseudo) ## heterozygous snp prob
            d[j,k] ~ dbern(0.5) ## random direction of bias
            b[j,k] ~ dbern(mono) ## probability of mono-allelic expression
        }
        
        ## Gene level (expression)
        for ( j in 1:JJ ) {

            ## Likelihood 
            ## generative distribution of the observed data 
            gexp[j, k] ~ dnorm(mu.1[k], tau.1[k])
            
        }

        ## mu and tau are Fixed Effects dependent on the cluster/state assignment 
        ## result in cluster specific means and precision
        ## gamma is group specific Random Effect 
        
        mu.1[k] <-  mu[1] * (equals(epsilon[k], 1 )) +
                    mu[2] * (equals(epsilon[k], 2 )) +
                    mu[3] * (equals(epsilon[k], 3 ))

        tau.1[k] <- sig[1] * (equals( epsilon[k], 1 )) +
                    sig[2] * (equals( epsilon[k], 2 )) +
                    sig[3] * (equals( epsilon[k], 3 ))
        
       # PRIOR
       ##     Epsilons hold our cluster/state assignment 
       ##     theta are the mixture probabilities for states 
       ##      cell specific 
        
        
        epsilon[k] ~ dcat(theta[])
    }
    ## Bulk
    for ( j in 1:J ) {
        l[j] ~ dbin(fma[j], n.bulk[j]) # minor allele
        fma[j] <- pseudo*(ma[j]) + (1-pseudo)*(1-ma[j]) # prob of observing minor allele
        ma[j] ~ dbern(0.5) # whether minor allele is affected, each is independent
    }
    
    theta[1:3] ~ ddirich(alpha[])

    # HYPERHYPERPARAMETER
    for(i in 1:3){
        alpha[i] <- 1
    }
}
